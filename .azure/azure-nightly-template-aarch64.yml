jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: 240
  variables:
  - group: AWS_Keys
  pool:
    vmImage: ${{ parameters.vmImage }}
  steps:
  # - script : |
  #     set -e
  #     instance_id=$(aws ec2 --region ${AWS_REGION} describe-addresses --public-ips ${PUBLIC_IP} --query 'Addresses[0].InstanceId')
  #     if [-n $instance_id]; then
  #       aws ec2 --region ${AWS_REGION} start-instances --instance-ids i-06d9194cdb207f908
  #     fi
  #   env:
  #     PUBLIC_IP: 52.3.95.242
  #     AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
  #     AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
  #   displayName: 'Start EC2 instance'
  - task: CopyFilesOverSSH@0
    inputs:
      sshEndpoint: AARCH64
      #sourceFolder: # Optional
      #contents: '**'
      targetFolder: '~/tmp-$(Build.BuildNumber)' # Optional
      #cleanTargetFolder: false # Optional
      #overwrite: true # Optional
      #failOnEmptySource: false # Optional
      #flattenFolders: false # Optional
  - task: SSH@0
    inputs:
      sshEndpoint: AARCH64
      runOptions: 'script' # Options: commands, script, inline
      #commands: # Required when runOptions == Commands
      scriptPath: '.azure/script/build.sh'
      # inline: 'uname -m; echo "Hello"' # Required when runOptions == Inline
      args: '${{ parameters.os }} $(Build.ArtifactStagingDirectory)'
        # OS_NAME: ${{ parameters.os }}
        # AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        # AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        # ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)
      #failOnStdErr: true # Optional
    # env:
    #   OS_NAME: ${{ parameters.os }}
    #   AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
    #   AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
    #   ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)
